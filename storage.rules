rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin;
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isValidImage() {
      return request.resource.contentType.matches('image/.*')
        && request.resource.size < 5 * 1024 * 1024; // 5MB max
    }
    
    function isProfileImage() {
      return request.resource.contentType.matches('image/.*')
        && request.resource.size < 2 * 1024 * 1024; // 2MB max for profile images
    }

    // Profile images
    match /profileImages/{userId}/{fileName} {
      allow read: if true; // Public read access for profile images
      allow write: if isAuthenticated() 
        && request.auth.uid == userId 
        && isProfileImage();
    }

    // Gallery images
    match /galleryImages/{userId}/{fileName} {
      allow read: if true; // Public read access for gallery images
      allow write: if isAuthenticated() 
        && request.auth.uid == userId 
        && isValidImage();
    }

    // Credential documents
    match /credentials/{userId}/{fileName} {
      allow read: if isAuthenticated() 
        && (request.auth.uid == userId || request.auth.token.isAdmin == true);
      allow write: if isAuthenticated() 
        && request.auth.uid == userId 
        && request.resource.size < 10 * 1024 * 1024; // 10MB max for documents
    }

    // Default deny
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
